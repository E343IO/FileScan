# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EmailObject(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, email_id: str=None, message_body: object=None):  # noqa: E501
        """EmailObject - a model defined in Swagger

        :param email_id: The email_id of this EmailObject.  # noqa: E501
        :type email_id: str
        :param message_body: The message_body of this EmailObject.  # noqa: E501
        :type message_body: object
        """
        self.swagger_types = {
            'email_id': str,
            'message_body': object
        }

        self.attribute_map = {
            'email_id': 'emailId',
            'message_body': 'messageBody'
        }
        self._email_id = email_id
        self._message_body = message_body

    @classmethod
    def from_dict(cls, dikt) -> 'EmailObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmailObject of this EmailObject.  # noqa: E501
        :rtype: EmailObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_id(self) -> str:
        """Gets the email_id of this EmailObject.


        :return: The email_id of this EmailObject.
        :rtype: str
        """
        return self._email_id

    @email_id.setter
    def email_id(self, email_id: str):
        """Sets the email_id of this EmailObject.


        :param email_id: The email_id of this EmailObject.
        :type email_id: str
        """
        if email_id is None:
            raise ValueError("Invalid value for `email_id`, must not be `None`")  # noqa: E501

        self._email_id = email_id

    @property
    def message_body(self) -> object:
        """Gets the message_body of this EmailObject.


        :return: The message_body of this EmailObject.
        :rtype: object
        """
        return self._message_body

    @message_body.setter
    def message_body(self, message_body: object):
        """Sets the message_body of this EmailObject.


        :param message_body: The message_body of this EmailObject.
        :type message_body: object
        """
        if message_body is None:
            raise ValueError("Invalid value for `message_body`, must not be `None`")  # noqa: E501

        self._message_body = message_body
